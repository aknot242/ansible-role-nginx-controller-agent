---

- hosts: loadbalancers
  remote_user: ubuntu
  become: true
  become_method: sudo
  gather_facts: yes

  tasks:

## pull up to playbook example as pre-tasks
  - name: upgrade packages here.
    apt: 
      update_cache: yes
      upgrade: yes

  - name: install minimal support for python2 for Agent install script
    apt: 
      name: "{{ packages }}"
      state: present
    vars:
      packages:
      - python-minimal

  - name: Get controller api key for agent registration
    uri:
      url: "https://{{controller_fqdn}}/api/v1/platform/global"
      method: "GET"
      return_content: yes
      status_code: 200
      validate_certs: false
      headers:
        Cookie: "{{controller_auth_token}}"
    register: ctrl_globals

  - name: Copy api_key to a variable
    set_fact:
      api_key: "{{ctrl_globals.json.currentStatus.agentSettings.apiKey}}"
## end playbook

  # https://www.nginx.com/blog/monitoring-nginx/
  - name: COPY files/stub_status.conf /etc/nginx/conf.d/
    copy:
      src: "files/stub_status.conf"
      dest: "/etc/nginx/conf.d/stub_status.conf"
      force: yes

  # necessary for process monitoring.
  - name: COPY files/nginx-plus-api.conf /etc/nginx/conf.d/
    copy:
      src: "files/nginx-plus-api.conf"
      dest: "/etc/nginx/conf.d/nginx-plus-api.conf"
      force: yes

  - name: download the installer script from controller
    get_url:
      url: "https://{{controller_fqdn}}:8443/1.4/install/controller/"
      dest: ~/install.sh
      validate_certs: no
      force: yes
    register: controller_return

  - name: try to backup agent.conf
    copy:
      src: 
      dest: 
      force: yes
      remote_src: yes

  - name: run the Controller Agent installer
    shell: "API_KEY={{api_key}} sh ./install.sh"
    args:
      chdir: ~
    register: agent_install

  - debug:
      var: agent_install.stdout_lines

  - name: stop controller registration to preserve agent.conf
    service:
      name=controller-agent
      state=stopped

  - name: try to restore agent.conf
    copy:
      src:
      dest: 
      force: yes
      remote_src: yes

  - name: start controller agent
    service:
      name=controller-agent
      state=started

  - name: restart nginx
    service:
      name: nginx
      state: restarted